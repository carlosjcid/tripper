import 'dart:async';
import 'dart:io';
import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:charts_flutter/charts_flutter.dart';

class HomeScreen extends StatelessWidget {
  final String title;
  final String subTitle;
  final String videoUrl;
  final List<Benefit> benefits;
  final String buttonText;

  HomeScreen({
    this.title,
    this.subTitle,
    this.videoUrl,
    this.benefits,
    this.buttonText,
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(title),
      ),
      body: Padding(
        padding: const EdgeInsets.all(8.0),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.start,
          crossAxisAlignment: CrossAxisAlignment.start,
          children: <Widget>[
            Text(
              subTitle,
              style: Theme.of(context).textTheme.headline6,
            ),
            VideoPlayer(VideoPlayerController.network(videoUrl)),
            ...benefits.map((benefit) {
              return Container(
                padding: const EdgeInsets.all(8.0),
                child: Text(benefit.text),
              );
            }).toList(),
            RaisedButton(
              child: Text(buttonText),
              onPressed: () {
                Navigator.of(context).pushNamed('/signup');
              },
            ),
          ],
        ),
      ),
    );
  }
}

class SignupScreen extends StatefulWidget {
  @override
  _SignupScreenState createState() => _SignupScreenState();
}

class _SignupScreenState extends State<SignupScreen> {
  final _formKey = GlobalKey<FormState>();
  String _type;
  String _name;
  String _company;
  String _email;
  String _password;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Cadastre-se'),
      ),
      body: Form(
        key: _formKey,
        child: Padding(
          padding: const EdgeInsets.all(8.0),
          child: Column(
            mainAxisAlignment: MainAxisAlignment.start,
            crossAxisAlignment: CrossAxisAlignment.start,
            children: <Widget>[
              TextFormField(
                decoration: InputDecoration(labelText: 'Tipo de usuário'),
                validator: (value) {
                  if (value.isEmpty) {
                    return 'O tipo de usuário é obrigatório.';
                  }
                  return null;
                },
                onSaved: (value) {
                  _type = value;
                },
              ),
              TextFormField(
                decoration: InputDecoration(labelText: 'Nome'),
                validator: (value) {
                  if (value.isEmpty) {
                    return 'O nome é obrigatório.';
                  }
                  return null;
                },
                onSaved: (value) {
                  _name = value;
                },
              ),
              if (_type == 'empresa')
                TextFormField(
                  decoration: InputDecoration(labelText: 'Nome da empresa'),
                  validator: (value) {
                    if (value.isEmpty) {
                      return 'O nome da empresa é obrigatório.';
                    }
                    return null;